name: Build Validation
run-name: Validation run ${{ github.run_number }} by @${{ github.actor }}
on: [workflow_dispatch]

jobs:
  Build-Validation:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Select 'all' target
        run: sed -i "s/checksum/all/g" ${{ github.workspace }}/resources/options
      - name: Build and push Docker images
        uses: docker/build-push-action@v6.11.0
        with:
          context: ${{ github.workspace }}
          push: false
          tags: xtide-builder:latest
      - run: mkdir -p ${{ github.workspace }}/src
      - uses: addnab/docker-run-action@v3
        with:
          image: xtide-builder:latest
          options: --user 1001:121 -v ${{ github.workspace }}/src:/src
          run: |
            echo "Building with:"
            cat /options
            cd /
            ./xtide_build.sh
      - name: Verify output
        run: |
          mkdir -p ${{ github.workspace }}/compare
          cd ${{ github.workspace }}/compare
          RELEASE=$(cat ${{ github.workspace }}/src/trunk/XTIDE_Universal_BIOS/Inc/Revision.inc | xargs)
          echo "Compare output with official binaries @ r$RELEASE."
          EXITCODE=0
          echo "Filename - Size: Actual Expected - Hash: Actual Expected"
          for i in ${{ github.workspace }}/src/trunk/XTIDE_Universal_BIOS/Build/*.bin; do
            BINNAME=$(basename $i)
            wget -q https://www.xtideuniversalbios.org/binaries/r$RELEASE/$BINNAME
            EXPECTEDHASH=$(tail -c +64 $BINNAME | md5sum | cut -d ' ' -f 1)
            EXPECTEDSIZE=$(stat -c%s $BINNAME)
            ACTUALHASH=$(tail -c +64 $i | md5sum | cut -d ' ' -f 1)
            ACTUALSIZE=$(stat -c%s $i)
            echo -n "$BINNAME - $ACTUALSIZE $EXPECTEDSIZE - $ACTUALHASH $EXPECTEDHASH "
            if [[ $EXPECTEDSIZE == $ACTUALSIZE && $EXPECTEDHASH == $ACTUALHASH ]]; then
              echo "‚úÖ"
            else
              echo "‚ùå"
              EXITCODE=1
            fi
          done
          exit $EXITCODE
        shell: bash
          
  
      - run: echo "üçè This job's status is ${{ job.status }}."
